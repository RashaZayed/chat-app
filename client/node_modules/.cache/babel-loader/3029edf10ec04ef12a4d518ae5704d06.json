{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zayed\\\\Desktop\\\\React\\\\Full-stack\\\\RealTimeChatApp\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport 'socket.io-client';\nimport io from \"socket.io-client\";\nimport '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport \"./App.css\";\nconst socket = io.connect(\"http://localhost:4000\");\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\"\n  }); //current message and name\n\n  const [chat, setChat] = useState([]); //array of all names and their messages\n\n  useEffect(() => {\n    socket.on('message', ({\n      name,\n      message\n    }) => {\n      console.log(chat);\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    console.log(chat);\n  }, []);\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state;\n    socket.emit('message', {\n      name,\n      message\n    });\n    setState({\n      message: \"\",\n      name\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Massenger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-field\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          onChange: e => onTextChange(e),\n          value: state.name,\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          variant: \"outlined\",\n          id: \"outlined-multiling-static\",\n          onChange: e => onTextChange(e),\n          value: state.message,\n          label: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v74o7h5qTTtgL/DwRz/d7ttPTtE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/zayed/Desktop/React/Full-stack/RealTimeChatApp/client/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","App","state","setState","message","name","chat","setChat","on","console","log","onTextChange","e","target","value","onMessageSubmit","preventDefault","emit","renderChat","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport 'socket.io-client'\nimport io from \"socket.io-client\";\nimport '@material-ui/core'\nimport { TextField } from '@material-ui/core';\n\nimport \"./App.css\";\n\nconst socket = io.connect(\"http://localhost:4000\");\n\nfunction App() {\n  const [state, setState] = useState({ message: \"\", name: \"\" }); //current message and name\n  const [chat, setChat] = useState([]); //array of all names and their messages\n\n  useEffect(()=> {\n    socket.on('message' , ({name , message}) => {\n      console.log(chat)\n      setChat([...chat, {name , message} ] ) \n    });\n    console.log(chat)\n    \n   \n  },[])\n\n  const onTextChange = (e)=> {\n    setState({ ...state, [e.target.name]: e.target.value} );\n\n\n  }\n  const onMessageSubmit = (e) =>{\n    e.preventDefault();\n    const {name , message} = state;\n    socket.emit('message' , {name , message})\n    setState({message: \"\" , name})\n  }\n\n  const renderChat = ()=> {\n    return chat.map(({name , message}, i)=> {\n      return (\n        <div key={i}>\n          <h3>{name}: <span>{message}</span></h3>\n\n\n\n        </div>\n      \n     ) })\n  }\n  return (\n    <div className=\"card\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Massenger</h1>\n        <div className=\"name-field\">\n          <TextField\n            name=\"name\"\n            onChange={(e) => onTextChange(e)}\n            value={state.name}\n            label=\"Name\"\n          />\n        </div>\n        <div>\n          <TextField\n            name=\"message\"\n            variant=\"outlined\"\n            id=\"outlined-multiling-static\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message}\n            label=\"Message\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}